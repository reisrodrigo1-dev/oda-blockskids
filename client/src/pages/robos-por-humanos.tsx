import React, { useState } from "react";
import { useLocation } from "wouter";

const RobosPorHumanos: React.FC = () => {
  const [, setLocation] = useLocation();
  const [cenaAtual, setCenaAtual] = useState(0);

  const cenas = [
    {
      titulo: "ü§ñ Bem-vindos ao Laborat√≥rio do Futuro!",
      conteudo: "Ol√°, jovens inventores! Voc√™s acabaram de entrar no laborat√≥rio mais avan√ßado do mundo, onde criamos rob√¥s para ajudar as pessoas. Sou a Dra. Ana, rob√≥tica especialista, e hoje voc√™s ser√£o meus assistentes especiais!",
      personagem: "üë©‚Äçüî¨",
      fundo: "bg-gradient-to-br from-blue-400 via-purple-500 to-pink-500",
      objetivos: [
        "Descobrir como rob√¥s podem ajudar pessoas",
        "Conhecer diferentes tipos de rob√≥tica assistiva", 
        "Entender a import√¢ncia da tecnologia para inclus√£o"
      ]
    },
    {
      titulo: "ü¶æ Descobrindo a Rob√≥tica Assistiva",
      conteudo: "Primeiro, vamos conhecer Maya! Ela perdeu o bra√ßo em um acidente, mas agora usa uma pr√≥tese rob√≥tica incr√≠vel. Vejam como ela consegue pegar objetos, escrever e at√© tocar piano! A tecnologia devolveu sua independ√™ncia.",
      personagem: "üë©‚Äçü¶Ω",
      fundo: "bg-gradient-to-br from-green-400 via-blue-500 to-purple-600",
      objetivos: [
        "Compreender o conceito de pr√≥teses rob√≥ticas",
        "Aprender sobre sensores de movimento",
        "Descobrir como a eletricidade controla m√∫sculos artificiais"
      ]
    },
    {
      titulo: "üè• Hospital do Amanh√£",
      conteudo: "Agora estamos no hospital mais moderno do mundo! Aqui, rob√¥s cirurgi√µes ajudam m√©dicos em opera√ß√µes delicadas. O rob√¥ Da Vinci permite que os cirurgi√µes fa√ßam movimentos precisos atrav√©s de pequenos cortes. Tamb√©m temos rob√¥s que levam medicamentos e fazem companhia para pacientes solit√°rios.",
      personagem: "üè•",
      fundo: "bg-gradient-to-br from-white via-blue-100 to-green-200",
      objetivos: [
        "Entender rob√¥s na medicina",
        "Conhecer a precis√£o rob√≥tica em cirurgias",
        "Descobrir rob√¥s de companhia e assist√™ncia hospitalar"
      ]
    },
    {
      titulo: "ü¶Æ Rob√¥s Guia e Assistentes",
      conteudo: "Conhe√ßam Rex, o c√£o-rob√¥ guia! Ele ajuda pessoas cegas a navegarem pela cidade com seguran√ßa. Seus sensores detectam obst√°culos, sem√°foros e at√© reconhecem rostos familiares. E este √© Charlie, um rob√¥ que ajuda crian√ßas autistas a se comunicarem melhor!",
      personagem: "ü¶Æ",
      fundo: "bg-gradient-to-br from-yellow-300 via-orange-400 to-red-500",
      objetivos: [
        "Conhecer rob√¥s de mobilidade para deficientes visuais",
        "Entender sensores ultrass√¥nicos e de navega√ß√£o",
        "Descobrir rob√¥s terap√™uticos para autismo"
      ]
    },
    {
      titulo: "üè≠ F√°brica Rob√≥tica",
      conteudo: "Bem-vindos √† nossa f√°brica automatizada! Aqui, rob√¥s trabalham 24 horas fazendo tarefas perigosas que seriam arriscadas para humanos. Eles soldam pe√ßas em altas temperaturas, movem cargas pesadas e trabalham com produtos qu√≠micos. Isso mant√©m os trabalhadores seguros!",
      personagem: "üè≠",
      fundo: "bg-gradient-to-br from-gray-600 via-blue-700 to-purple-800",
      objetivos: [
        "Compreender automa√ß√£o industrial",
        "Aprender sobre seguran√ßa no trabalho",
        "Entender rob√¥s em ambientes perigosos"
      ]
    },
    {
      titulo: "üéØ Miss√£o Cumprida: Rob√¥s a Servi√ßo da Humanidade!",
      conteudo: "Parab√©ns, futuros engenheiros! Voc√™s descobriram como a rob√≥tica transforma vidas todos os dias. Desde pr√≥teses que devolvem movimentos at√© rob√¥s que salvam vidas em hospitais. Agora √© sua vez: que rob√¥ voc√™s criariam para ajudar algu√©m?",
      personagem: "üèÜ",
      fundo: "bg-gradient-to-br from-gold-300 via-yellow-400 to-orange-500",
      objetivos: [
        "Refletir sobre o impacto social da rob√≥tica",
        "Inspirar-se para criar solu√ß√µes tecnol√≥gicas",
        "Planejar pr√≥ximos projetos de rob√≥tica assistiva"
      ]
    }
  ];

  const proximaCena = () => {
    if (cenaAtual < cenas.length - 1) {
      setCenaAtual(cenaAtual + 1);
    }
  };

  const cenaAnterior = () => {
    if (cenaAtual > 0) {
      setCenaAtual(cenaAtual - 1);
    }
  };

  const voltarProjeto = () => {
    setLocation("/projeto-pedagogico");
  };

  const cena = cenas[cenaAtual];

  return (
    <div className={`min-h-screen ${cena.fundo} flex flex-col items-center justify-center p-8 font-nunito`}>
      <div className="max-w-4xl mx-auto bg-white/95 backdrop-blur-sm rounded-3xl shadow-2xl p-8 border-4 border-white">
        {/* Header */}
        <div className="text-center mb-8">
          <div className="text-8xl mb-4 animate-bounce">{cena.personagem}</div>
          <h1 className="text-4xl font-bold text-gray-800 mb-4">{cena.titulo}</h1>
          <div className="bg-blue-100 rounded-2xl p-6 text-lg text-gray-700 leading-relaxed">
            {cena.conteudo}
          </div>
        </div>

        {/* Objetivos */}
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 rounded-2xl p-6 mb-8">
          <h3 className="text-2xl font-bold text-blue-800 mb-4 flex items-center">
            <span className="mr-3">üéØ</span>
            Objetivos desta Etapa:
          </h3>
          <ul className="space-y-3">
            {cena.objetivos.map((objetivo, index) => (
              <li key={index} className="flex items-center text-lg text-gray-700">
                <span className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center mr-4 font-bold">
                  {index + 1}
                </span>
                {objetivo}
              </li>
            ))}
          </ul>
        </div>

        {/* Navega√ß√£o */}
        <div className="flex justify-between items-center">
          <button
            onClick={cenaAnterior}
            disabled={cenaAtual === 0}
            className={`px-6 py-3 rounded-xl font-bold text-lg transition-all duration-300 ${
              cenaAtual === 0
                ? "bg-gray-300 text-gray-500 cursor-not-allowed"
                : "bg-blue-500 text-white hover:bg-blue-600 hover:scale-105"
            }`}
          >
            ‚Üê Anterior
          </button>

          <div className="flex items-center space-x-2">
            {cenas.map((_, index) => (
              <div
                key={index}
                className={`w-4 h-4 rounded-full transition-all duration-300 ${
                  index === cenaAtual
                    ? "bg-blue-500 scale-125"
                    : index < cenaAtual
                    ? "bg-green-500"
                    : "bg-gray-300"
                }`}
              />
            ))}
          </div>

          {cenaAtual === cenas.length - 1 ? (
            <button
              onClick={voltarProjeto}
              className="px-6 py-3 bg-green-500 text-white rounded-xl font-bold text-lg hover:bg-green-600 hover:scale-105 transition-all duration-300"
            >
              Concluir ‚úì
            </button>
          ) : (
            <button
              onClick={proximaCena}
              className="px-6 py-3 bg-blue-500 text-white rounded-xl font-bold text-lg hover:bg-blue-600 hover:scale-105 transition-all duration-300"
            >
              Pr√≥ximo ‚Üí
            </button>
          )}
        </div>

        {/* Progresso */}
        <div className="mt-6">
          <div className="flex justify-between text-sm text-gray-600 mb-2">
            <span>Progresso da Aula</span>
            <span>{cenaAtual + 1} de {cenas.length}</span>
          </div>
          <div className="w-full bg-gray-200 rounded-full h-3">
            <div
              className="bg-gradient-to-r from-blue-500 to-purple-500 h-3 rounded-full transition-all duration-500"
              style={{ width: `${((cenaAtual + 1) / cenas.length) * 100}%` }}
            />
          </div>
        </div>
      </div>
    </div>
  );
};

export default RobosPorHumanos;
